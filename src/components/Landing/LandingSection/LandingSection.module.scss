// @import '../../../assets/scss/variables.scss';
// @import '../../../assets/scss/mixins.scss';

$base-rotation: 24deg;
$offset-rotation: 10deg;

@mixin diamond {
  max-width: calc(100% - 1rem);
  clip-path: polygon(0% 50%, 50% 0, 100% 50%, 50% 100%);
}

.el {
  @include container;
  position: relative;
  margin-bottom: 2rem;
  font-size: .9rem;
  @media (min-width: $sm) {
    display: flex;
    align-items: center;
    padding: 1rem;
    font-size: unset;
  }

  &:last-child {
    margin-bottom: 4rem;
  }
}

.content {
  position: relative;
  @media (min-width: $sm) {
    flex: 0 1 50%;
  }
}

.content_image {
  position: absolute;
  max-width: 300px;
  right: 0;
  @media (min-width: $sm) {
    position: relative;
    flex: 0 1 50%;
    max-width: unset;
    max-width: 450px;
  }
  @media (min-width: $md) {
    max-width: unset;
  }

  &::before,
  &::after {
    content: '';
    position: absolute;
    z-index: -1;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    backface-visibility: hidden;
    @include diamond;
  }
  
  &::before {
    transform: 
      translate(1%, 12%) 
      rotate($base-rotation - $offset-rotation - 2deg);
  }
  
  &::after {
    transform: 
      translate(11%, 3%) 
      rotate($base-rotation + $offset-rotation);
    background-color: transparentize($accent-secondary, 0.8);
    @media (min-width: $sm) {
      background-color: transparentize($accent-secondary, 0.4);
    }
  }
  
}

:global(.dance) {
  &::before {
    background-color: transparentize($accent-secondary-light, 0.1);
    @media (min-width: $sm) {
      background-color: transparentize($accent-secondary-light, 0.2);
    }
  }
}

:global(.web)  {
  &::before {
    background-color: transparentize($accent, 0.8);
    @media (min-width: $sm) {
      background-color: transparentize($accent, 0.4);
    }
  }
}

:global(.art)  {
  &::before {
    background-color: transparentize($accent-tertiary, 0.8);
    @media (min-width: $sm) {
      background-color: transparentize($accent-tertiary, 0.4);
    }
  }
}

.image {
  position: relative;
  clip-path: polygon(0% 27%, 100% 96%, 66% 0);
  overflow: hidden;
  @include diamond;
  transform: rotate($base-rotation);
  
  // overlay
  &::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: transparentize($bg-variant, 0.2);
    @media (min-width: $sm) {
      background-color: transparentize($bg-variant, 0.8);
    }
  }

  & > div {
    transform: rotate(-$base-rotation);
  }
}

.heading {
  @include title;
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.list {
  @include list-zero;
  line-height: 1;
}

.item {
  color: inherit;
}
